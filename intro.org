* Introduction

#+BEGIN_SRC rust
fn main() {
    let mut c = 0;

    for pair in vec!['a', 'b', 'c', 'd', 'e', 'f', 'g']
        .into_iter()
        .map(|letter| {
            c += 1;
            (letter, c)
        })
    {
        println!("{:?}", pair);
    }
}
#+END_SRC

#+RESULTS:
: ('a', 1)
: ('b', 2)
: ('c', 3)
: ('d', 4)
: ('e', 5)
: ('f', 6)
: ('g', 7)

* Hello, World!

#+BEGIN_SRC rust :tangle "hello_world.rs"
fn main() {
    println!("Hello, World!");
}
#+END_SRC

#+RESULTS:
: Hello, World!

* Hello, Cargo!

#+BEGIN_SRC sh
cargo --version
#+END_SRC

#+RESULTS:
: cargo 1.47.0

#+BEGIN_SRC sh
cargo new hello_cargo
#+END_SRC

#+BEGIN_SRC sh
cd hello_cargo
ls -al
#+END_SRC

#+RESULTS:
| total      | 24 |         |       |      |     |    |       |            |
| drwxr-xr-x |  4 | michael | users | 4096 | Jan | 16 | 20:02 | .          |
| drwxr-xr-x |  3 | michael | users | 4096 | Jan | 16 | 20:02 | ..         |
| -rw-r--r-- |  1 | michael | users |  228 | Jan | 16 | 20:02 | Cargo.toml |
| drwxr-xr-x |  6 | michael | users | 4096 | Jan | 16 | 20:02 | .git       |
| -rw-r--r-- |  1 | michael | users |    8 | Jan | 16 | 20:02 | .gitignore |
| drwxr-xr-x |  2 | michael | users | 4096 | Jan | 16 | 20:02 | src        |

#+BEGIN_SRC sh :results raw
cd hello_cargo
cat Cargo.toml
#+END_SRC

#+RESULTS:
[package]
name = "hello_cargo"
version = "0.1.0"
authors = ["dr-neptune <mrose4@worcester.edu>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]

#+BEGIN_SRC sh :results raw
cd hello_cargo
cat src/main.rs
#+END_SRC

#+RESULTS:
fn main() {
    println!("Hello, world!");
}

We can build it 

#+BEGIN_SRC sh :results verbatim
cd hello_cargo
# build it
cargo build

# run it
cargo run

# check to make sure it runs
cargo check
#+END_SRC

#+RESULTS:
: Hello, world!
